{"version":3,"sources":["Components/WeatherUI/index.jsx","Components/Authentication/index.jsx","App.js","index.js"],"names":["WeatherUI","require","props","state","location","e","this","target","value","className","event","updateCurrentLocation","onClick","findWeather","style","displayingData","display","weather","lat","lon","React","Component","Authentication","username","password","alert","type","placeholder","onChange","updateUserName","updatePassword","checkAuth","authenticated","numTimes","App","forceUpdate","useState","setValue","ConfirmAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAyDeA,GAxDDC,EAAQ,G,kDAIrB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACZC,SAAU,IAJI,E,yGA6BGC,GACrBC,KAAKH,MAAMC,SAAWC,EAAEE,OAAOC,Q,+BAGtB,IAAD,SACR,OACC,gCACC,oBAAIC,UAAU,iBAAd,2CAGA,0BAAOA,UAAU,SAAjB,0BAAmC,UAAnC,qBAAiD,QAAjD,4BAAoE,aAApE,0BAA4F,SAACC,GAAD,OAAW,EAAKC,sBAAsBD,MAAlI,IACA,wBAAQD,UAAU,oBAAoBG,QAAU,kBAAM,EAAKC,eAA3D,0BAEA,sBAAKJ,UAAU,QAAQK,MAAoC,GAA7BR,KAAKH,MAAMY,eAAyB,GAAK,CAAEC,QAAU,QAAnF,UACC,mDAA6C,IAAvBV,KAAKH,MAAMC,SAAiB,YAAcE,KAAKH,MAAMC,SAA3E,OACA,2CAAcE,KAAKH,MAAMc,WACzB,4CAAeX,KAAKH,MAAMe,IAA1B,gBAA4CZ,KAAKH,MAAMgB,iB,GA/CpCC,IAAMC,YC0DfC,GA5DDrB,EAAQ,G,kDAIrB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACZoB,SAAU,GACVC,SAAU,IALI,E,2DASDnB,GACjBC,KAAKH,MAAMoB,SAAWlB,EAAEE,OAAOC,Q,qCAGjBH,GACdC,KAAKH,MAAMqB,SAAWnB,EAAEE,OAAOC,Q,kCAIH,KAAxBF,KAAKH,MAAMoB,UAA2C,KAAxBjB,KAAKH,MAAMqB,UAC5CC,MAAM,4B,+BAwBK,IAAD,OAEX,OACC,sBAAKhB,UAAU,iBAAf,UACC,uBAAOA,UAAU,eAAeiB,KAAK,OAAOC,YAAY,WAAWC,SAAY,SAAClB,GAAD,OAAW,EAAKmB,eAAenB,MAC9G,uBAAOD,UAAU,+BAA+BiB,KAAK,OAAOC,YAAY,WAAWC,SAAY,SAAClB,GAAD,OAAW,EAAKoB,eAAepB,MAC9H,wBAAQD,UAAU,oBAAoBG,QAAU,kBAAM,EAAKmB,aAA3D,0B,GAnDyBX,IAAMC,YCG/BW,G,MADU/B,EAAQ,IACF,GAChBgC,EAAW,EA6BAC,MAff,WACE,IAAIC,EAbc,aAGZF,EAAW,IACfD,GAAgB,GAJM,MAQEI,mBAAS,GARX,mBAQVC,GARU,WASxB,OAAO,kBAAMA,GAAS,SAAA7B,GAAK,QAAMA,MAIf8B,GAClB,OAEE,sBAAK7B,UAAU,MAAf,UACE,qBAAKK,MAAwB,GAAjBkB,EAAyB,GAAK,CAAEhB,QAAU,QAAtD,SACE,cAAC,EAAD,CAAgBmB,YAAcA,EAAcH,cAAgBA,MAE9D,qBAAKlB,MAAwB,GAAjBkB,EAAwB,GAAK,CAAEhB,QAAU,QAArD,SACE,cAAC,EAAD,UCzBRuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23b238ed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nconst axios = require('axios'); // use to send API requests!\n\nclass WeatherUI extends React.Component {\n\n\tconstructor(props) {\n    \tsuper(props);\n\n    \tthis.state = {\n    \t\tlocation: \"\"\n    \t};\n    }\n\n\tfindWeather () {\n\t\t// axios(\n\t\t// \t{\n\t\t// \t  method: \"GET\", \n\t\t// \t  url: process.env.REACT_APP_LOCAL === \"true\" ? \"http://localhost:3001/weather\" : \"http://localhost:8081/weather\",\n\t\t// \t  crossDomain: true, \n\t\t// \t  data: {\n\t\t// \t  \tlocation: this.state.location\n\t\t// \t  }\n\t\t// \t}).then((response) => {\n\t\t// \t\tconsole.log(response);\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tdisplayingData: true,\n\t\t// \t\t\tweather: response.data.data.weather[0].description,\n\t\t// \t\t\tlat: response.data.data.coord.lat,\n\t\t// \t\t\tlon: response.data.data.coord.lon,\n\t\t// \t\t})\n\t\t// \t}\n\t\t// );\n\t}\n\n\tupdateCurrentLocation(e) {\n\t\tthis.state.location = e.target.value;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h2 className=\"marginAddedTop\">\n\t\t\t\t\tGet a cities current weather!\n\t\t\t\t</h2>\n\t\t\t\t<input className=\"block\" className=\"inputs\" type=\"text\" placeholder=\"Vancouver\" onChange= { (event) => this.updateCurrentLocation(event) }></input>\n\t\t\t\t<button className=\"inputs confirmBtn\" onClick={ () => this.findWeather() }>Get Weather!</button>\n\n\t\t\t\t<div className=\"block\" style={this.state.displayingData == true ? {} : { display : 'none' } }>\n\t\t\t\t\t<h3>Data loaded for: {this.state.location == '' ? \"Vancouver\" : this.state.location}!</h3>\n\t\t\t\t\t<h4>Weather: {this.state.weather}</h4>\n\t\t\t\t\t<h4>Latitude: {this.state.lat}, Longitude: {this.state.lon}</h4>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WeatherUI;","import React, { Component } from \"react\";\nconst axios = require('axios');\n\nclass Authentication extends React.Component {\n\n\tconstructor(props) {\n    \tsuper(props);\n\n    \tthis.state = {\n    \t\tusername: '',\n    \t\tpassword: '',\n    \t};\n    }\n\n    updateUserName(e) {\n\t\tthis.state.username = e.target.value;\n\t}\n\n\tupdatePassword(e) {\n\t\tthis.state.password = e.target.value;\n\t}\n\n\tcheckAuth() {\n\t\tif (this.state.username === '' || this.state.password === '')\n\t\t\talert(\"Incomplete login info!\");\n\n\t\t// axios(\n\t\t// \t{\n\t\t// \t  method: \"POST\", \n\t\t// \t  url: process.env.port === 8080 ? \"http://localhost:3001/authenticate\" : \"http://localhost:8081/authenticate\",\n\t\t// \t  crossDomain: true, \n\t\t// \t  data: {\n\t\t// \t  \tusername: this.state.username,\n\t\t// \t  \tpassword: this.state.password,\n\t\t// \t  }\n\t\t// \t}).then((response) => {\n\n\t\t// \t\tif (response.data.auth === 1) {\n\t\t// \t\t\talert(\"Authenticated!\");\n\t\t// \t\t\t// this.props.confirmAuth()\n\t\t// \t\t\tthis.props.forceUpdate(1);\n\t\t// \t\t} else {\n\t\t// \t\t\talert(\"Invalid username or password!\");\n\t\t// \t\t}\n\t\t// \t}\n\t\t// );\n\t}\n\n    render() {\n\n\t\treturn (\n\t\t\t<div className=\"marginAddedTop\">\n\t\t\t\t<input className=\"block inputs\" type=\"text\" placeholder=\"username\" onChange= { (event) => this.updateUserName(event) }></input>\n\t\t\t\t<input className=\"block marginAddedLeft inputs\" type=\"text\" placeholder=\"password\" onChange= { (event) => this.updatePassword(event) }></input>\n\t\t\t\t<button className=\"inputs confirmBtn\" onClick={ () => this.checkAuth() }>Login</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Authentication;","import './App.css';\nimport React, { useState } from 'react';\nimport Weather from \"./Components/WeatherUI/index.jsx\";\nimport Authentication from \"./Components/Authentication/index.jsx\";\nimport Module from 'module'\nconst axios = require('axios'); // use to send API requests!\nlet authenticated = false;\nlet numTimes = 0;\n\nconst ConfirmAuth = () => {\n  \n  // the hook renders twice automatically (frustrating!)\n  if (++numTimes > 2) {\n    authenticated = true;\n  }\n\n  // this just forces an update\n  const [value, setValue] = useState(0);\n  return () => setValue(value => ++value);\n}\n\nfunction App() {\n  let forceUpdate = ConfirmAuth(); // hook\n  return (\n\n    <div className=\"App\">\n      <div style={authenticated == false ? {} : { display : 'none' } }>\n        <Authentication forceUpdate={ forceUpdate } authenticated={ authenticated }  />\n      </div>\n      <div style={authenticated == true ? {} : { display : 'none' } }>\n        <Weather />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}